<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0]=30*room_speed;   // To continue pinging
alarm[1] = 1 * room_speed;
request[0] = -1
request[1] = -1
request[2] = -1
text2 = ""
test = false
achievedesc = ""
achievetitle = ""
achieved = false
isachieved = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_gameserver) &amp;&amp; room = rm_multiplayer
{
    if obj_scoreboard.player1score &gt; 0
    {
        request[2] = gj_trophy_get_id("44647"); // Request for loading a trophy
        gj_trophy_add("44647")
    }
}

if instance_exists(obj_client) &amp;&amp; room = rm_multiplayer
{
    if obj_scoreboard.player2score &gt; 0
    {
        gj_trophy_add("43961")
        request[2] = gj_trophy_get_id("43961"); // Request for loading a trophy
    }
}

if room = rm_solo
{
    if obj_sp_scoreboard.player1score &gt; 0 
    {
        gj_trophy_add("43961")
        request[2] = gj_trophy_get_id("43961"); // Request for loading a trophy
    }
}

if gj_user_isloggedin() &amp;&amp; test = false
{
    request[2] = gj_trophy_get_id("5035"); // Request for loading a trophy
    gj_trophy_add("5035")
    test = true

}

alarm[1] = 2 * room_speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gj_session_ping(true);

alarm[0]=30*room_speed;   // To continue pinging
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Async HTTP event
var resultid= gj_result_id();
if resultid == request[2]
    {

        if gj_result_status() == 1

        {

            total = gj_result_data_count(); // Total trophy loaded

            text2 = "";

            for ( i = 0; i &lt; total; i++)

            {

                //text2 += gj_result_data_field_num( "id", i) +"#"; // the id of the i no trophy in the loaded map

                achievetitle = gj_result_data_field_num( "title", i); // same as above
                ds_queue_enqueue(global.messageQueue, achievetitle);

                //achievedesc = gj_result_data_field_num( "description", i); // same as above
                
                isachieved = gj_result_data_field_num( "achieved", i); // same as above
                
                
                achieved = true

                // "id", "title" those keys is available in the manual

            }

        }
    }

        else 

 

            { show_message(gj_result_error());}

if(resultid==request[0]) //If it was user information.
{
    var status=gj_result_status();
    if(status)
    canproceed=true
    else
    if(status==0)
    show_message(gj_result_error())
    else
    show_message("GameMaker error")
}

if(resultid==request[1]) //If this are the scores.
{
    if(gj_result_status())
    {
        var i;
        for(i=0;i&lt;gj_result_data_count();i+=1)
        {
            score_name=gj_result_data_field_num("display_name",i)
            score_score=gj_result_data_field_num("score",i)
        }
    }
}

if (resultid == request[0])

{

    if(gj_result_status())

    {

        gj_session_open();

        alarm[0]=30*room_speed;  

    }

}

gj_result_clear() 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gj_session_close()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gj_init("11051","6c86fc0e5ee2c96a07a97d8f52f904b7")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room != rm_multiplayer
{
    draw_set_font(fnt_main)
    draw_set_color(c_white)
    draw_set_halign(fa_left)
    if gj_user_isloggedin()
    {
    text = ("Welcome " + gj_user_username() + "!")
    }
    else
    {
    text = ("You are not logged in")
    }

draw_text(50,50,text)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
